<Application
    x:Class="RoomManagement.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:local="clr-namespace:RoomManagement"
    StartupUri="MainWindow.xaml"
     >
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />-->
                <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Cyan.xaml" />-->
                <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Cyan.xaml" />-->
                <ResourceDictionary Source="themes/Generic.xaml"/>
                <ResourceDictionary Source="Styles/MultiSelectComboBox.Custom.ControlTemplate.xaml"/>
                <ResourceDictionary Source="Styles/MultiSelectComboBox.Custom.DropdownItemTemplate.xaml"/>
                <ResourceDictionary Source="Styles/MultiSelectComboBox.Custom.SelectedItemTemplate.xaml"/>
                <ResourceDictionary>
                    <!--  Flat ComboBox  -->
                    <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#eeeeee" />
                    <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#eeeeee" />
                    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#eeeeee" />
                    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eeeeee" />
                    <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#eeeeee" />
                    <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="ToggleButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Label
                                Name="Border"
                                Grid.ColumnSpan="2"
                                Background="{StaticResource ComboBoxNormalBackgroundBrush}"
                                BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" />

                        </Grid>

                    </ControlTemplate>
                    
                    <Style x:Key="titleTextForDashboard" TargetType="TextBlock">
                        <Setter Property="Foreground" Value="#333333" />
                        <Setter Property="FontSize" Value="18" />
                        <Setter Property="FontWeight" Value="SemiBold" />
                        <Setter Property="Margin" Value="10 0 0 0" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                    </Style>
                    <Style x:Key="ComboBoxFlatStyle" TargetType="{x:Type ComboBox}">
                        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
                        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                        <Setter Property="TextElement.Foreground" Value="Black" />
                        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBox">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <ToggleButton
                                            Name="ToggleButton"
                                            Width="500"
                                            ClickMode="Press"
                                            Focusable="False"
                                            IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                            Template="{StaticResource ComboBoxToggleButtonTemplate}">
                                            <!--  Margin="5, 3, 23, 3"  -->
                                        </ToggleButton>
                                        <ContentPresenter
                                            Name="ContentSite"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                            ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                            IsHitTestVisible="False" />
                                        <TextBox
                                            Name="PART_EditableTextBox"
                                            Margin="3,3,23,3"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Background="Transparent"
                                            Focusable="True"
                                            IsReadOnly="{TemplateBinding IsReadOnly}"
                                            Visibility="Hidden">
                                            <TextBox.Template>
                                                <ControlTemplate TargetType="TextBox">
                                                    <Border Name="PART_ContentHost" Focusable="False" />
                                                </ControlTemplate>
                                            </TextBox.Template>
                                        </TextBox>


                                        <!--  Popup showing items  -->
                                        <Popup
                                            Name="Popup"
                                            AllowsTransparency="True"
                                            Focusable="False"
                                            IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                                            Placement="Bottom"
                                            PopupAnimation="Slide">
                                            <Grid
                                                Name="DropDown"
                                                MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                                MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                                SnapsToDevicePixels="True">
                                                <Border
                                                    Name="DropDownBorder"
                                                    Margin="0,1,0,0"
                                                    Background="#000000"
                                                    BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"
                                                    BorderThickness="1,1,1,1"
                                                    CornerRadius="0"
                                                    Opacity="0.2" />
                                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                                </ScrollViewer>
                                            </Grid>
                                        </Popup>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ItemsControl.HasItems" Value="False">
                                            <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="95" />
                                        </Trigger>
                                        <Trigger Property="UIElement.IsEnabled" Value="False">
                                            <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}" />
                                        </Trigger>
                                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                        </Trigger>
                                        <Trigger Property="ComboBox.IsEditable" Value="True">
                                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                                            <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible" />
                                            <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <!--  End of Flat ComboBox  -->


                    <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid>
                                        <Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
                                        <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="#222528"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                        <Setter Property="AutoGenerateColumns" Value="False" />
                        <Setter Property="HeadersVisibility" Value="Column" />
                        <Setter Property="Margin" Value="0 10 0 0" />
                        <Setter Property="Grid.Row" Value="5" />
                        <Setter Property="SelectionMode" Value="Single" />
                        <Setter Property="SelectionUnit" Value="FullRow" />
                        <Setter Property="CanUserAddRows" Value="False" />
                        <Setter Property="CanUserDeleteRows" Value="False" />
                        <Setter Property="CanUserReorderColumns" Value="False" />
                        <Setter Property="CanUserResizeRows" Value="False" />
                        <Setter Property="FontSize" Value="13" />
                        <Setter Property="GridLinesVisibility" Value="None" />
                        <Setter Property="ColumnWidth" Value="*" />

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGrid}">
                                    <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                            <ScrollViewer.Template>
                                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="Auto"/>
                                                        </Grid.RowDefinitions>
                                                        <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.All}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.Row="1"/>
                                                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" ViewportSize="{TemplateBinding ViewportHeight}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                                        <Grid Grid.Column="1" Grid.Row="2">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                                        </Grid>
                                                    </Grid>
                                                </ControlTemplate>
                                            </ScrollViewer.Template>
                                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </ScrollViewer>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="DataGridRowStyle1" TargetType="{x:Type DataGridRow}">
                        <Setter Property="Margin" Value="0 4 0 0" />
                        <Setter Property="Background" Value="#FFFFFF"/>
                        <Setter Property="SnapsToDevicePixels" Value="true"/>
                        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                        <Setter Property="ValidationErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridRow}">
                                    <Border x:Name="DGR_Border" Padding="0 8" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="0" SnapsToDevicePixels="True">
                                        <SelectiveScrollingGrid>
                                            <SelectiveScrollingGrid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </SelectiveScrollingGrid.ColumnDefinitions>
                                            <SelectiveScrollingGrid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </SelectiveScrollingGrid.RowDefinitions>
                                            <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                                            <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        </SelectiveScrollingGrid>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#623ED0"/>
                                <Setter Property="Foreground" Value="#ffffff"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#623ED0"/>
                                <Setter Property="Foreground" Value="#ffffff"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="#dfdfdf"/>
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="DataGridCellStyle1" TargetType="{x:Type DataGridCell}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="Margin" Value="15 0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                    <Border Background="{TemplateBinding Background}" BorderThickness="0" SnapsToDevicePixels="True">
                                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
                        <Setter Property="Width" Value="8"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Cursor" Value="SizeWE"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="DataGridColumnHeaderStyle1" TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="#69717D" />
                        <Setter Property="Margin" Value="15 0 15 10" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                    <Grid>
                                        <theme:DataGridHeaderBorder Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SortDirection="{TemplateBinding SortDirection}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </theme:DataGridHeaderBorder>
                                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
                    <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
                    <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
                    <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
                    <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
                    <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
                    <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
                    <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
                    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
                    <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
                    <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
                    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
                    <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
                        <Setter Property="BorderBrush" Value="#DAE2EA"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type CheckBox}">
                                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="checkBoxBorder" CornerRadius="3" Padding="1" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <Grid x:Name="markGrid">
                                                <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                                <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                            </Grid>
                                        </Border>
                                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasContent" Value="true">
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                            <Setter Property="Padding" Value="4,-1,0,0"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#9575CD"/>
                                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#9575CD"/>
                                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="{x:Null}">
                                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="gridEditButton" TargetType="Button">
                        <Setter Property="Background" Value="#512DA8" />
                        <Setter Property="BorderBrush" Value="#4A148C" />
                        <Setter Property="Foreground" Value="#ffffff" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Template" >
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Padding="5" BorderThickness="1" CornerRadius="5">
                                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#673AB7" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="gridCloseButton" TargetType="Button">
                        <Setter Property="Background" Value="#3253F1" />
                        <Setter Property="BorderBrush" Value="#4A148C" />
                        <Setter Property="Foreground" Value="#ffffff" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Template" >
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Padding="5" BorderThickness="1" CornerRadius="5">
                                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#673AB7" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="gridStopButton" TargetType="Button">
                        <Setter Property="Background" Value="#b8b8b8" />
                        <Setter Property="BorderBrush" Value="#444444" />
                        <Setter Property="Foreground" Value="#F44336" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Template" >
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Padding="5" BorderThickness="1" CornerRadius="5">
                                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#673AB7" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="gridActiveButton" TargetType="Button">
                        <Setter Property="Background" Value="#b8b8b8" />
                        <Setter Property="BorderBrush" Value="#b8b8b8" />
                        <Setter Property="Foreground" Value="#07da63" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Template" >
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Padding="2" BorderThickness="1" CornerRadius="50">
                                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#673AB7" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>


                    <Style x:Key="gridRemoveButton" TargetType="Button" BasedOn="{StaticResource gridEditButton}">
                        <Setter Property="Background" Value="#D32F2F" />
                        <Setter Property="BorderBrush" Value="#B71C1C" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#F44336" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>


                    <Style x:Key="gridButtonIcon" TargetType="Icon:PackIconMaterial">
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Width" Value="12" />
                        <Setter Property="Height" Value="12" />
                    </Style>


                    <Style x:Key="menuButton" TargetType="Button">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Margin" Value="15,0,15,20" />
                        <Setter Property="Height" Value="50" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="Transparent"
                                        BorderThickness="1"
                                        CornerRadius="10">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="#ffffff"
                                                BorderThickness="1"
                                                CornerRadius="10">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>


                    <Style x:Key="borderPage" TargetType="Border">
                        <Setter Property="Background" Value="#000000" />
                        <Setter Property="CornerRadius" Value="25" />
                        <Setter Property="Grid.Column" Value="1" />
                        <Setter Property="Grid.Row" Value="1" />
                        <Setter Property="Margin" Value="30,0,0,0" />
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect
                                    BlurRadius="20"
                                    Opacity="0.5"
                                    ShadowDepth="1" />
                            </Setter.Value>
                        </Setter>
                    </Style>


                    <Style x:Key="toggleButton" TargetType="ToggleButton">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Grid>
                                        <Border
                                            x:Name="Border"
                                            Width="50"
                                            Height="26"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Background="#3256F1"
                                            CornerRadius="13" />
                                        <Ellipse
                                            x:Name="Ellipse"
                                            Width="24"
                                            Height="24"
                                            Margin="25,0,0,0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Fill="#fbfbfb" />
                                    </Grid>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation
                                                            Storyboard.TargetName="Border"
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="#001C91"
                                                            Duration="0:0:0.2" />
                                                        <ThicknessAnimation
                                                            Storyboard.TargetName="Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="1 0 0 0"
                                                            Duration="0:0:0.2" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>

                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation
                                                            Storyboard.TargetName="Border"
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="#3256F1"
                                                            Duration="0:0:0.2" />
                                                        <ThicknessAnimation
                                                            Storyboard.TargetName="Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="25 0 0 0"
                                                            Duration="0:0:0.2" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>


                    <Style x:Key="addButton" TargetType="Button">
                        <Setter Property="Background" Value="#FFFFFF" />
                        <Setter Property="Foreground" Value="#3253F1" />
                        <Setter Property="Padding" Value="0,3" />
                        <Setter Property="Margin" Value="0,0,0,5" />
                        <Setter Property="Height" Value="50" />
                        <Setter Property="FontSize" Value="14" />
                        <Setter Property="FontWeight" Value="Bold" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border
                                        Padding="1"
                                        Background="{TemplateBinding Foreground}"
                                        CornerRadius="25">
                                        <Border Background="#FFFFFF" CornerRadius="25">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#e0e0e0" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="buttonCircle" TargetType="Button">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Margin" Value="0,0" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="#878787"
                                        BorderThickness="1"
                                        CornerRadius="30">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#d9d9d9" />
                            </Trigger>
                            <Trigger Property="IsMouseCaptured" Value="True">
                                <Setter Property="Background" Value="#c4c4c4" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="myTextBox" TargetType="TextBox">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="#384756" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="BorderBrush" Value="#E1E6EB" />
                        <Setter Property="FontSize" Value="13" />
                        <Setter Property="Padding" Value="20" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                                    <Border x:Name="border" CornerRadius="5" Padding="10 0 0 0" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                                    </Border>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="#4880FF"/>
                                        </Trigger>
                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter Property="BorderBrush" TargetName="border" Value="#4880FF"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="myPasswordBox" TargetType="PasswordBox">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="#384756" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="BorderBrush" Value="#E1E6EB" />
                        <Setter Property="FontSize" Value="13" />
                        <Setter Property="Padding" Value="20" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type PasswordBox}">
                                    <Border x:Name="border" CornerRadius="5"  Padding="10 0 0 0" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                    </Border>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="#4880FF"/>
                                        </Trigger>
                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter Property="BorderBrush" TargetName="border" Value="#4880FF"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="mainButton" TargetType="Button">
                        <Setter Property="Background" Value="#4880FF" />
                        <Setter Property="Foreground" Value="#ffffff" />
                        <Setter Property="FontSize" Value="16" />
                        <Setter Property="FontWeight" Value="Light" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="Width" Value="180" />
                        <Setter Property="Height" Value="40" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}" CornerRadius="7">
                                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0 0 0 1"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#3b6bd9" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    
                    <Style x:Key="secondaryButton" TargetType="Button" BasedOn="{StaticResource mainButton}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="#979797" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}" CornerRadius="7" BorderThickness="0.8" BorderBrush="#b9b9b9">
                                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0 0 0 1"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#d0d0d0" />
                                <Setter Property="Foreground" Value="#ffffff" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="TitleText" TargetType="TextBlock">
                        <Setter Property="FontSize" Value="36" />
                        <Setter Property="FontWeight" Value="Bold" />
                        <Setter Property="TextAlignment" Value="Center" />
                        <Setter Property="Foreground" Value="#FFFFFF" />
                    </Style>


                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

    </Application.Resources>
</Application>
